initSidebarItems({"enum":[["Compose2","Composes two state machines"],["SpawnError","Error when spawning a new state machine"],["Void","The empty type for cases which can't occur."],["WakeupError","Error when waking up a connection"]],"macro":[["rotor_compose","Compose multiple state machines into single type"]],"mod":[["mio","A fast, low-level IO library for Rust focusing on non-blocking APIs, event notification, and other useful utilities for building high performance IO apps."],["void","Void"]],"struct":[["Config","Event loop configuration"],["EarlyScope","This is a structure that works similarly to Scope, but doesn't have a context"],["EventSet","A set of readiness events returned by `Poll`."],["Loop","An object that is used to construct a loop"],["LoopInstance","Second stage of loop creation"],["Notifier","The object used to wakeup unrelated state machine"],["PollOpt","Configures readiness polling behavior for a given `Evented` value."],["Response","The response of a state machine to the (mio) action"],["Scope","The structure passed to every action handler"],["Time","The current time"],["Timeout",""],["TimerError",""]],"trait":[["Evented","A value that may be registered with an `EventLoop`"],["GenericScope","A common part of `Scope` and `EarlyScope`"],["Machine","A trait that every state machine in the loop must implement"]],"type":[["Slab","Slab"]]});